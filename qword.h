#ifndef QWORD_H
#define QWORD_H

#define _WIN32_DCOM

#include <QMainWindow>
#include"qmainwindow.h"
#include <QString>
#include <QVariant>
#include <ActiveQt/QAxObject>
#include <ActiveQt/QAxWidget>
#include "objbase.h"
//#include "GlobalAppData.h"

class QWord : public QObject
{
    Q_OBJECT

public:
    QWord(QObject *parent = 0);
    ~QWord();

public:
    QAxObject* getDocuments(){return m_documents;}
    QAxObject* getDocument(){return m_document;}
    QAxObject* getWordApp(){return m_word;}
public:
    /**************************************************************************/
    /* ???   ????                                                            */
    /**************************************************************************/
    void save();				//????????????
    void close();				//??? ??? ????????????????????
    void saveAs();				//???word?????
    bool createWord(QString reportname );		//????????μ?word???
    void openWord();			//??????????е?word???
    bool createNewWord(const QString& filePath );		//????????μ?word???

    void setTableAutoFitBehavior(int flag);//?????????????: 0 ???  1???????????  2 ??????????
    void setPageOrientation(int flag);	//???????0?????wdOrientPortrait  1?????wdOrientLandscape
    void setWordPageView(int flag);	//??????????????web???wdWebView 6??????????wdPrintView 3 ??????????wdReadingView 7
    void setFontSize(int fontsize);						//??????????С
    void setFontName(QString& fontName);	//????????	???? ?????塱
    void setFontBold(bool flag);						//???????
    void setParagraphAlignment(int flag);				//???????λ????????? 0 ?????? 1 ,???? 2
    void setRowAlignment(int tableIndex,int row,int flag);
    //???????п????и???????????С
    void setColumnWidth(int column, int width);			//?????п?
    void setColumnHeight(int column, int height);		//?????и?
    void setRowHeight(int nTable,int Row, int height);
    void setCellString(int row, int column, const QString& text);
    void setCellFontBold(int row, int column, bool isBold);			//???????????  isBold???????????
    void setCellFontSize(int row, int column, int size);			//?????????С
    void setOptionCheckSpell(bool flags);		//??????????д????  true????????  false ???????

    QString GetText();												//???????
    void getUsedRange(int *topLeftRow, int *topLeftColumn, int *bottomRightRow, int *bottomRightColumn);
    void setSelectionRange(int start,int end);	//"SetRange(1, 9)"??1????????????????9???????????Χ
    QVariant getCellValue(int row, int column);						//????????????
    int getTableCount();											//???word?б???????


    QString getStrErrorInfo(){return m_strError;}					//????????г????????????????QMessageBox::information??? ??cpp????QMessageBox ??????????????е?????????
    void deleteSelectColumn(int column);							//??????????
    void moveForEnd();												//????????????????β
    void insertCellPic(int row,int column,const QString& picPath);	//???????????
    void intsertTable(int row,int column);							//??????????м??б???
    void insertMoveDown();											//???????
    void insertText(const QString& text);							//????????
    void insertTable(int tableIndex,int row,int column);

    void MergeCells(int tableIndex, int nStartRow,int nStartCol,int nEndRow,int nEndCol);//????????
    bool open(const QString& strFilePath,bool bVisable);
    bool openword(bool bVisable);
    bool isOpen();


    void setColumnWidth(int nTable,int column,int width);
    void setCellString(int nTable,int row,int column,const QString& text);
    void insertCellPic(int nTable,int row,int column,const QString& picPath);
    void setCellFontBold(int nTable,int row,int column,bool isBold);
    void setCellFontSize(int nTable,int row,int column,int size);
    //void addTableRow(int nTable ,int nRow,int rowCount);
    void addTableRow(int tableIndex ,int nRow,int rowCount);
    void setColumnHeight(int nTable,int column, int height);
    void intsertTable(int tableIndex, int row,int column);
    void insertText(QString Tag, QString text);
public:
    void setVisible(bool isVisible);

private:
    QAxObject* m_word;
    QAxObject* m_documents;
    QAxObject* m_document;
    QString  m_fileName;
    QString  m_saveName;
    QString  m_strError;
    QString  m_strFilePath;
    bool m_bOpened;

};

#endif // QWORD_H
